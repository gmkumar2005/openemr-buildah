worker_processes  auto;
error_log  /var/log/nginx/error.log;
pid /run/nginx.pid;
events {
    worker_connections  1024;
}
# start the http block
http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    server_names_hash_bucket_size 128;
    keepalive_timeout  65;

    gzip  off;
    #upstream php {
        #server unix:/var/run/php-fpm.sock;
    #}
    index  index.html index.htm index.php;

    ssl_certificate      /etc/nginx/dummy-cert;
    ssl_certificate_key    /etc/nginx/dummy-key;

    #  http host for php 7.1 connect
    #  redirects to ssl only host below
    server {
        # Note that the different ports are used below to decide
        # which version of php-fpm to use
        listen 8080;
        
        server_name _;
        set $base /var/www/html;
        root $base;

        ## redirect www to nowww
        #if ($host = 'www.example.net' ) {
            #rewrite  ^/(.*)$  https://example.net/$1  permanent;
        #}

        #access_log /var/log/*/example.net_access_log main;
        #error_log    /var/log/*/example.net_error_log notice;

        # openemr specific SSL settings, I am still working on this?
        #include openemr-ssl.conf;

        # restrict/protect certain files
        #include globals.conf;
        # globals.conf configuration file.
        # Designed to be included in any server {} block
        # If this server only hosts openemr, this file can be merged with openemr.conf

        # Stops the annoying error messages in the logs. robots are not allowed
        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        location = /robots.txt  {
            log_not_found off;
            access_log off;
        }

        # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
        # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
        location ~ /\. {
            deny all;
        }

        # protect or deny access to important server information and testing files
        # alternatively, you can deny access to all files using {deny all; return 404;} or remove them
        #location ~* /(info|test)\.php$ {
            #auth_basic "Restricted Access";
            #auth_basic_user_file /path/to/.htpasswd;
            #fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            #fastcgi_pass fastcgi_pass dev-php-fpm-7-1:9000;
            #include fastcgi_params;
        #}

        # assets, media
        location ~* \.(?:css(\.map)?|js(\.map)?|jpe?g|png|gif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv)$ {
                expires 7d;
                access_log off;
                log_not_found off;
            }

        ## Deny certain Referers
        if ( $http_referer ~* (babes|forsale|girl|jewelry|love|nudit|organic|poker|porn|sex|teen) ) {
            #return 404;
            return 403;
        }

        # Stop deep linking or hot linking
        location /images/ {
            valid_referers none blocked www.example.com example.com;
            if ($invalid_referer) {
                return   403;
            }
        }
        # end globals.conf configuration file.
        # svg, fonts
        location ~* \.(?:svgz?|ttf|ttc|otf|eot|woff2?)$ {
            add_header Access-Control-Allow-Origin "*";
            expires 7d;
            access_log off;
        }
         # gzip
        gzip on;
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;

        # Redirect server error pages to the static page /50x.html
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /var/lib/nginx/html;
        }
        # Pass the PHP scripts to PHP-FPM listening on 127.0.0.1:9000
        location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param SCRIPT_NAME $fastcgi_script_name;
            fastcgi_index index.php;
            include fastcgi_params;
            
            fastcgi_buffers 8 16k;
            fastcgi_buffer_size 32k;
            fastcgi_param PHP_ADMIN_VALUE	"open_basedir=$base/:/usr/lib/php/:/tmp/";
            proxy_read_timeout 5600;
            fastcgi_send_timeout 5600s;
            fastcgi_read_timeout 5600s;

        }
        # enable CORS for orthanc dicom server
        location  /orthanc/  {
            proxy_pass http://localhost:8042;
            proxy_set_header HOST $host;
            proxy_set_header X-Real-IP $remote_addr;
            rewrite /orthanc(.*) $1 break;
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Origin' '*';
        }

        # deny access to writable files/directories
        location ~* ^/sites/*/(documents|edi|era) {
            deny all;
        }

        # Pick one of the following two blockc, but not both:
        # protect special files from outside openemer login, and restrict them to superAdmins only
        #location ~* ^/(admin|setup|acl_setup|acl_upgrade|sl_convert|sql_upgrade|gacl/setup|ippf_upgrade|sql_patch)\.php {
            #auth_basic 				"Restricted Access";
            #auth_basic_user_file 	/path/to/.htpasswd;
            #fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            #fastcgi_pass dev-php-fpm-7-1:9000;
            #include fastcgi_params;
        #}

        # Alternatively all access to these files can be denied
        #location ~* ^/(admin|setup|acl_setup|acl_upgrade|sl_convert|sql_upgrade|gacl/setup|ippf_upgrade|sql_patch)\.php {
            #deny all;
            #return 404;
        #}

        if (!-e $request_filename) {
            # Needed for zend to work
            rewrite ^(.*/zend_modules/public)(.*) $1/index.php?$is_args$args last;

            # Needed for patient portal to work
            rewrite ^(.*/portal/patient)(.*) $1/index.php?_REWRITE_COMMAND=$1$2 last;
        }

        location / {
            # try as file ($uri), as directory ($uri/) if not found, send to index file
            # no php is touched for static content
            try_files $uri $uri/ /index.php;
            proxy_read_timeout 5600;
        }

        location /public {
                root  $base/public;
            }

        # redirect server error pages to the static page /50x.html
        #error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
            #root   /usr/local/www/nginx-dist;
        #}
        
        
       # Allow fpm ping and status from localhost
        location ~ ^/(fpm-status|fpm-ping)$ {
            access_log off;
            allow 127.0.0.1;
            deny all;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
            fastcgi_pass 127.0.0.1:9000;
        }
    }
    # Include other server configs
    # include /etc/nginx/conf.d/*.conf;
} # end http block
